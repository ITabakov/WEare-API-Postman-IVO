{
	"info": {
		"_postman_id": "8763a3c4-c49e-4bd3-a50b-cc7fcf8cb278",
		"name": "Exame Ivan Petkov",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28750816",
		"_collection_link": "https://universal-resonance-346930.postman.co/workspace/Alpha50QA~ae2dcf3a-9ca2-4f64-af89-3d3e31a0df45/collection/28750816-8763a3c4-c49e-4bd3-a50b-cc7fcf8cb278?action=share&source=collection_link&creator=28750816"
	},
	"item": [
		{
			"name": "validateInitialSetup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Validate emailAddress\", function () {\r",
							"pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Validate username\", function () {\r",
							"pm.expect(jsonData.username).to.eql(pm.collectionVariables.get(\"userName\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Validate URL\", function () {\r",
							"pm.expect(jsonData.url).to.eql(pm.collectionVariables.get(\"url\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/members/me?key={{yourKey}}&token={{yourToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"members",
						"me"
					],
					"query": [
						{
							"key": "key",
							"value": "{{yourKey}}"
						},
						{
							"key": "token",
							"value": "{{yourToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Validate emailAddress\", function () {\r",
							"pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"nameBoard\"));\r",
							"});\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"});\r",
							"pm.collectionVariables.set(\"boardId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/boards/?name={{nameBoard}}&key={{yourKey}}&token={{yourToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{nameBoard}}"
						},
						{
							"key": "key",
							"value": "{{yourKey}}"
						},
						{
							"key": "token",
							"value": "{{yourToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Validate List name\", function () {\r",
							"pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"listName\"));\r",
							"});\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"});\r",
							"pm.collectionVariables.set(\"listId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/lists?name={{listName}}&idBoard={{boardId}}&key={{yourKey}}&token={{yourToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{listName}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{yourKey}}"
						},
						{
							"key": "token",
							"value": "{{yourToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Validate Card name\", function () {\r",
							"pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"cardName\"));\r",
							"});\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"});\r",
							"pm.collectionVariables.set(\"cardId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/cards?idList={{listId}}&key={{yourKey}}&token={{yourToken}}&name={{cardName}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{listId}}"
						},
						{
							"key": "key",
							"value": "{{yourKey}}"
						},
						{
							"key": "token",
							"value": "{{yourToken}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Validate updated Card name\", function () {\r",
							"pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"updatedCardName\"));\r",
							"});\r",
							"pm.test(\"Validate updated Card description\", function () {\r",
							"pm.expect(jsonData.desc).to.eql(pm.collectionVariables.get(\"descriptionOfCard\"));\r",
							"});\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/cards/{{cardId}}?key={{yourKey}}&token={{yourToken}}&name={{updatedCardName}}&desc={{descriptionOfCard}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{yourKey}}"
						},
						{
							"key": "token",
							"value": "{{yourToken}}"
						},
						{
							"key": "name",
							"value": "{{updatedCardName}}"
						},
						{
							"key": "desc",
							"value": "{{descriptionOfCard}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update card Colour",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"});\r",
							"pm.test(\"Validate updated Card colour\", function () {\r",
							"pm.expect(jsonData.cover.color).to.eql(pm.collectionVariables.get(\"colourOfCard\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \r\n  \"cover\": {\r\n    \"color\": \"{{colourOfCard}}\"\r\n    \r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/cards/{{cardId}}?key={{yourKey}}&token={{yourToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{yourKey}}"
						},
						{
							"key": "token",
							"value": "{{yourToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/boards/{{boardId}}?key={{yourKey}}&token={{yourToken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{yourKey}}"
						},
						{
							"key": "token",
							"value": "{{yourToken}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "yourKey",
			"value": "36ff26a84fab11df952bd0f8e2a10cf5"
		},
		{
			"key": "yourToken",
			"value": "ATTA6fb1532f34adee218cc83947283690f62afaf6e57a1c16e5a86a706c5e4781ac0C265178"
		},
		{
			"key": "email",
			"value": "afew@abv.bg",
			"type": "string"
		},
		{
			"key": "userName",
			"value": "ivanpetkov36",
			"type": "string"
		},
		{
			"key": "baseURL",
			"value": "https://api.trello.com/1",
			"type": "string"
		},
		{
			"key": "url",
			"value": "https://trello.com/ivanpetkov36",
			"type": "string"
		},
		{
			"key": "nameBoard",
			"value": "exameBoard"
		},
		{
			"key": "listName",
			"value": "My first List on a Board"
		},
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "listId",
			"value": ""
		},
		{
			"key": "cardName",
			"value": "My first card"
		},
		{
			"key": "cardId",
			"value": ""
		},
		{
			"key": "updatedCardName",
			"value": "My first edited card"
		},
		{
			"key": "descriptionOfCard",
			"value": "This is my first card which I have no idea what will be its fitful purpose!"
		},
		{
			"key": "colourOfCard",
			"value": "purple",
			"type": "string"
		}
	]
}